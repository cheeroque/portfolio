@mixin media-max-width($breakpoint) {
  $width: map-get($breakpoints, $breakpoint) - 0.02;
  @media (max-width: $width) {
    @content;
  }
}

@mixin media-min-width($breakpoint) {
  $width: map-get($breakpoints, $breakpoint);
  @media (min-width: $width) {
    @content;
  }
}

@mixin responsive-font-size($base, $ratio) {
  font-size: $base;

  @each $breakpoint, $width in $breakpoints {
    @include media-min-width($breakpoint) {
      $cur: map-get($container-widths, $breakpoint);
      $max: map-get($container-widths, 'xxl');
      $multiplier: 1;

      @if $cur != 'none' {
        $multiplier: math.div($cur, $max) * $ratio;
      }

      font-size: $base + $base * math.max(($multiplier - 1), 0);
    }
  }
}

@mixin aspect($ratio) {
  position: relative;
  width: 100%;
  overflow: hidden;

  &::before {
    display: block;
    content: '';
    padding-bottom: 100% * $ratio;
  }

  & > * {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
  }
}
